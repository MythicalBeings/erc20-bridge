################################################################################
# Copyright © 2013-2016 The Nxt Core Developers.                               #
# Copyright © 2016-2022 Jelurida IP B.V.                                       #
#                                                                              #
# See the LICENSE.txt file at the top-level directory of this distribution     #
# for licensing information.                                                   #
#                                                                              #
# Unless otherwise agreed in a custom licensing agreement with Jelurida B.V.,  #
# no part of this software, including this file, may be copied, modified,      #
# propagated, or distributed except according to the terms contained in the    #
# LICENSE.txt file.                                                            #
#                                                                              #
# Removal or modification of this copyright notice is prohibited.              #
#                                                                              #
################################################################################

# Do not modify this file. Instead, create a nxt.properties file with only the
# properties you need to change, and set them there. The values in 
# nxt.properties override those in nxt-default.properties.


#### PERMISSIONED BLOCKCHAIN ####

# Indicate this is a permissioned blockchain (requires additional support)
# $type=boolean
nxt.isPermissioned=false

# Authentication credentials secret phrase (account must have WRITER role)
# $type=password
nxt.credentials.secretPhrase=


#### PEER NETWORKING ####

# Announce my IP address/hostname to peers and allow them to share it with other
# peers.  Incoming connections will not be allowed if this is set to false.
# $type=boolean
nxt.shareMyAddress=true

# Port for incoming peer to peer networking requests.
# $type=integer $min=1 $max=65535
nxt.peerServerPort=27874

# Peer connect timeout (seconds)
# $type=integer $min=0
nxt.peerConnectTimeout=10

# Peer read timeout (seconds)
# $type=integer $min=0
nxt.peerReadTimeout=20

# Enable UPnP for the peer port.
# $type=boolean
nxt.enablePeerUPnP=true

# UPnP gateway http read timeout, milliseconds. Set to -1 to disable.
# Default 7000 if not set.
# $type=integer $min=-1
nxt.upnpGatewayTimeout=7000

# UPnP gateway socket connection timeout, milliseconds. Set to -1 to disable.
# Default 3000 if not set.
# $type=integer $min=-1
nxt.upnpDiscoverTimeout=3000

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all interfaces, including IPv6.
nxt.peerServerHost=0.0.0.0

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to
# peers, and may be different from nxt.peerServerPort (useful if you do port
# forwarding behind a router).  Peers will use the external connection address 
# if nxt.myAddress is not specified and nxt.shareMyAddress is set to true.
nxt.myAddress=

# My platform, to be announced to peers.
nxt.myPlatform=

# Default initial peers. Only used if nxt.usePeersDb=true.
# Do not modify. Add custom peers to nxt.wellKnownPeers instead.
# $type=readonly
nxt.defaultPeers=ardor.ambersive.app; 195.201.228.95; 54.37.143.15; ardor.blockfrikis.com; 62.173.150.205; \
  167.235.68.55; 51.79.242.100; 51.254.36.22; 94.130.57.208; 209.209.8.185; 51.83.218.15; node8.ardor.tools; \
  198.244.191.251; 198.244.150.223; 172.105.207.97; 209.209.8.186; 146.59.97.7; 23.94.14.222; ardor27.y.cz; \
  157.90.148.166; 185.31.160.110; 138.201.92.25; 23.94.14.221; 167.235.230.160; ardor28.y.cz; 192.99.58.223; \
  146.59.97.10; 94.176.233.169; 185.66.109.213; 5.154.52.63; 49.242.223.251; 172.245.55.204; 133.125.40.137; \
  209.209.8.187; 167.235.76.213; alfred.airdns.org:40592; 51.83.182.205; 139.9.71.148; 198.211.31.216; 159.69.120.223; \
  168.119.156.99; 54.38.190.214; ardor30.y.cz; 62.173.149.25; 167.235.68.122; node3.ardor.tools; 54.37.154.2; \
  62.173.150.217; 23.234.225.94; 146.59.97.9; 51.161.130.229; 89.47.161.249; 23.234.225.95; ardor.crypto.sargue.net; \
  76.184.215.204; 65.21.201.244; 167.235.70.30; 54.38.197.31; 62.173.141.37; 146.59.95.148; 51.161.130.146; \
  195.123.225.127; 185.31.163.111; 62.173.141.65; 209.209.8.188; 51.195.203.109; 62.173.151.250; 195.201.228.83; \
  192.99.68.61; ardor29.y.cz; 92.222.22.30; 23.234.225.96; 162.243.242.8; 62.173.141.85; node2.ardor.tools; \
  98.50.165.34; ardor.jelurida.com; 62.173.151.202; 139.99.171.113; 89.233.105.194; 167.235.66.46; node.abclightning.io; \
  nxt.miasik.one; 85.214.106.88; 51.79.241.52; 62.173.142.231; 51.77.46.204; 51.75.44.68; 62.173.150.221; \
  81.169.133.102; 167.235.253.194; 15.235.142.68; 51.77.44.62; 23.94.14.220; jill.airdns.org:37874; 144.217.12.208; \
  168.119.211.214; 217.182.76.228; 54.37.143.10; node5.ardor.tools; 89.40.0.68; ardor9.y.cz; 43.152.198.112; \
  23.94.14.223; 51.83.229.195; 65.21.232.149; 167.235.253.188; 51.77.44.63; node4.ardor.tools; 62.173.150.208; \
  51.83.229.194; 167.235.69.213; 146.59.97.6; 172.245.187.231; 78.90.167.20; 51.178.39.247; 185.66.110.9; 176.123.4.157; \
  15.235.146.182; 62.173.151.241; 185.31.163.123; 62.173.142.207; 51.77.45.170; 23.234.225.97; 51.77.44.64; \
  220.122.152.222; 195.201.228.124; ardor7.y.cz; 221.148.112.110; 172.245.55.20; 62.173.142.227; 62.173.141.29; \
  62.173.142.221; 51.195.40.109; 139.99.170.238; 80.208.231.180; 139.99.170.9; 137.74.197.16; 51.77.44.61; \
  node7.ardor.tools; 192.99.71.161; 188.137.61.53; node1.ardor.tools; bg5000.mooo.com:37874; 188.166.109.46; \
  51.79.242.32; ardor3.y.cz; 211.55.57.92; 23.234.215.3; 62.173.151.252; 5.196.225.193; 157.14.254.121; 185.82.202.202; \
  158.69.214.248; 54.38.33.44; 185.31.163.108; 172.245.55.200; 168.119.154.14; 80.92.206.20; \
  doom-ardo-node-01.cryptonet.waw.pl; 49.212.156.13; 91.132.144.21; 84.26.22.76; 167.235.253.189; 51.83.229.237; \
  185.31.163.115; 172.245.187.232; 51.77.34.110; 146.59.13.29; ardor.nftmagic.art; 51.79.255.7; 167.235.70.26; \
  54.36.173.206; 80.92.204.171; 62.173.139.215; 92.222.9.192; node6.ardor.tools; 168.119.156.101; 142.44.246.169; \
  testardor.jelurida.com; testlight01.jelurida.com; testlight02.jelurida.com; testlight03.jelurida.com; \
  fatman.jelurida.com;

# A list of well known peer addresses / host names, separated by '; '. These
# peers are always selected first when creating outbound connections.
# $type=string $isList=true
nxt.wellKnownPeers=

# Known bad peers to be blacklisted.  Outbound connections will not be created
# and inbound connections will not be accepted.
# $type=string $isList=true
nxt.knownBlacklistedPeers=

# Default initial peers used for testnet only. Only used if nxt.usePeersDb=true.
# Do not modify. Add custom testnet peers to nxt.testnetPeers instead.
# $type=readonly
nxt.defaultTestnetPeers=ardor.blockfrikis.com; testlight01.jelurida.com; testnode2.ardor.tools; ardor.jelurida.com; \
  testardor.jelurida.com; testlight02.jelurida.com; testlight03.jelurida.com; fatman.jelurida.com; bg5000.mooo.com; \
  94.130.181.150; 80.211.167.215; 45.142.212.143; 188.34.196.155; testnode8.ardor.tools; testnode7.ardor.tools;

# Well known testnet peers.  These peers are always selected first when creating
# outbound connections.
# $type=string $isList=true
nxt.testnetPeers=

nxt.proxyBootstrapNodes=ardor.jelurida.com;

nxt.testnetProxyBootstrapNodes=testardor.jelurida.com;

# Maximum number of inbound connections.
# $type=integer $min=0
nxt.maxNumberOfInboundConnections=2000

# Maximum number of outbound connections.
# $type=integer
nxt.maxNumberOfOutboundConnections=8

# Stop adding new peers when number of known peers exceeds that many.
# This value must be at least 100.
# $type=integer $min=100
nxt.maxNumberOfKnownPeers=2000

# Stop removing old peers when number of known peers drops below that many.
# This value must be at least 100 and cannot be exceed nxt.maxNumberOfKnownPeers.
# $type=integer $min=100
nxt.minNumberOfKnownPeers=1000

# Blacklist period (seconds)
# $type=integer $min=0
nxt.blacklistingPeriod=600

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing
# only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 26874 (peer networking), 26876 (API)
# and 26877 (SSL API) will be used.
# $type=boolean
nxt.isTestnet=false

# Set to true when automated test is being executed. Tests code is in the
# "test" directory
# $type=boolean
nxt.isAutomatedTest=false

# Save known peers in the database
# $type=boolean
nxt.savePeers=true

# Set to false to disable use of the peers database and the default initial
# peers. This will not delete saved peers.
# $type=boolean
nxt.usePeersDb=true

# Set to false to disable getting more peers from the currently connected peers.
# Only useful when debugging and want to limit the peers to those in peersDb or
# wellKnownPeers.
# $type=boolean
nxt.getMorePeers=true

# Set to true to run offline - do not connect to peers and do not listen for
# incoming peer connections. This is equivalent to setting
# nxt.shareMyAddress=false, nxt.wellKnownPeers=, nxt.testnetPeers= 
# and nxt.usePeersDb=false, and if set to true overrides those properties.
# $type=boolean
nxt.isOffline=false

# Ignore peer announced addresses. Do not change unless you understand what it
# does.
# $type=boolean
nxt.ignorePeerAnnouncedAddress=false

# Do not include exception details when returning error response to peers.
# $type=boolean
nxt.hideErrorDetails=false

# Do not accept a bundler rate for an account with an effective balance
# less than the minimum
# $type=integer $min=0
nxt.minBundlerBalanceFXT=1000

# Do not accept a bundler rate for a bundler with a current fee limit
# less than the minimum
# $type=integer $min=0
nxt.minBundlerFeeLimitFXT=10

# Blacklisted bundler accounts
# $type=account $isList=true
nxt.blacklistedBundlerAccounts=

# List of accounts whose bundling rate is considered when calculating the best
# bundler rates. If empty, rates from all accounts are used (no filtering is done)
# $type=account $isList=true
nxt.bestBundlerRateWhitelist=

# If the base target goes above this percentage, the node is considered on a fork
# and starts reporting "FORK" blockchain state. Additionally, UI uses this value
# to display a warning. Defaults to 2000%
# $type=integer $min=100
nxt.forkBaseTargetPercentage=2000

#### API SERVER ####

# Accept http/json API requests.
# $type=boolean
nxt.enableAPIServer=true

# Hosts from which to allow http/json API requests, if enabled. Set to * to
# allow all. Can also specify networks in CIDR notation, e.g. 192.168.1.0/24.
# $type=string $isList=true
nxt.allowedBotHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1]; 0:0:0:0:0:0:0:1;

# Hosts from which API requests are executed without limiting the result size
# and the DB query processing time. See nxt.maxAPIRecords and nxt.openApiQueryTimeout
# Set to * to allow all. Can also specify networks in CIDR notation, e.g.
# 192.168.1.0/24.
# $type=string $isList=true
nxt.unlimitedBotHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1]; 0:0:0:0:0:0:0:1;

# Port for http/json API requests.
# $type=integer $min=1
nxt.apiServerPort=27876

# Port for https/json API request. If same as nxt.apiServerPort, the nxt.apiSSL
# setting determines whether SSL is used or not.
# $type=integer $min=1
nxt.apiServerSSLPort=27876

# Enable UPnP for the API ports.
# $type=boolean
nxt.enableAPIUPnP=false

# Host interface on which to listen for http/json API request, default localhost
# only. Set to 0.0.0.0 to allow the API server to accept requests from all
# network interfaces, including IPv6.
nxt.apiServerHost=127.0.0.1

# Idle timeout for http/json API request connections, milliseconds.
# $type=integer $min=0
nxt.apiServerIdleTimeout=30000

# Directory with html and javascript files for the new client UI, and admin
# tools utilizing the http/json API.
nxt.apiResourceBase=./html/www

# Default page for the API server.
nxt.apiWelcomeFile=index.html

# Java API documentation directory, optional.
nxt.javadocResourceBase=./html/doc

# Enable Cross Origin Filter for the API server.
# $type=boolean
nxt.apiServerCORS=true

# Add X-Frame-Options SAMEORIGIN header to every response as a protection
# against clickjacking.
# $type=boolean
nxt.apiFrameOptionsSameOrigin=true

# Enable SSL for the API server (also need to set nxt.keyStorePath and
# nxt.keyStorePassword).
# Non-SSL connections will be disabled if nxt.apiServerSSLPort is equal to
# nxt.apiServerPort.
# Otherwise, both SSL and non-SSL connections will be accepted.
# $type=boolean
nxt.apiSSL=false

# Enabled cipher suites for the API server when SSL is enabled. The list below
# is an example to use for choosing AES-GCM instead of AES-CBC, not the default.
#nxt.apiSSLCiphers=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384; \
#  TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256; \
#  TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384; \
#  TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256;
# $type=string $isList=true
nxt.apiSSLCiphers=

# Enforce requests that require POST to only be accepted when submitted as POST.
# $type=boolean
nxt.apiServerEnforcePOST=true

# Compress Http responses for the API server. If not set, enabled for openAPI
# nodes only.
# $type=boolean
nxt.enableAPIServerGZIPFilter=

# Password that should be provided when executing protected (administrative) API
# requests.
# Please choose a decent password here. Preferably, use a password generator.
# Password protection is disabled and password is not needed when the API server
# only listens on the localhost interface, i.e. when 
# nxt.apiServerHost=127.0.0.1.
# Use nxt.adminPasswordHash instead of nxt.adminPassword to specify only the hash.
# $type=password
nxt.adminPassword=

# SHA256 hash of the password that should be provided when executing protected 
# (administrative) API requests.
# Please choose a decent password before hashing it. Preferably, use a password 
# generator.
# Use either nxt.adminPassword or nxt.adminPasswordHash, not both
# $type=password
nxt.adminPasswordHash=

# Set to true to disable the password protection for admin API requests even
# when API server is publicly accessible. Not recommended.
# $type=boolean
nxt.disableAdminPassword=false

# The maximum number of records possible to retrieve with a single request. This
# restriction is not enforced if the admin password is provided, or is not
# needed (disabled or listening on localhost only).
# $type=integer $min=0
nxt.maxAPIRecords=100

# Timeout of the DB queries executing during API calls by openAPI nodes when
# adminPassword is not provided. In seconds, 0 disables the timeout.
# The purpose of this timeout is DoS prevention. If the timeout is reached,
# the API call will fail with errorCode 25
# $type=integer $min=0
nxt.openApiQueryTimeout=1

# API event registration timeout (seconds). The timeout is reset each time an
# event wait request is received from the application. The minimum value is 15
# seconds.
# $type=integer $min=15
nxt.apiEventTimeout=300

# Maximum number of applications with active event registrations.
# $type=integer $min=0
nxt.apiMaxEventUsers=32

# Maximum number of event registrations for a single user (IP address)
# $type=integer $min=0
nxt.apiMaxUserEventRegistrations=2

# Maximum file size accepted for upload, in bytes. Default and minimum value
# accepted is 43008 (42 kbytes).
# $type=integer $min=43008
nxt.maxUploadFileSize=43008

# If an unsigned transaction is submitted with insufficient fee, set the fee to
# the minimum fee calculated for this transaction instead, as if feeNQT=0 has
# been specified. Default is false. Applies only to the parent chain.
# $type=boolean
nxt.correctInvalidFees=false

# APIs to disable, as a semicolon separated list.
# $type=string $isList=true
nxt.disabledAPIs=

# Groups of APIs to disable, as a semicolon separated list of API tag names.
# $type=string $isList=true
nxt.disabledAPITags=

# Enables the API proxy. Requests are forwarded to a randomly chosen peer
# providing openAPI service. Outgoing transactions are signed locally - the
# secret phrase is never sent to the remote peer.
# Used by light clients or when the blockchain is not yet downloaded.
# For openAPI nodes, the API proxy remains disabled, ignoring this setting.
# For light clients, the API proxy is always enabled, ignoring this setting.
# $type=boolean
nxt.enableAPIProxy=true

# Operate as light client. Blockchain is not downloaded and processed, instead
# the API proxy is used (see nxt.enableAPIProxy).
# Light clients are not advertised as providing openAPI service even if they do
# have their API publicly accessible.
# $type=boolean
nxt.isLightClient=false

# If set, all requests will be forwarded to the specified openAPI peer
nxt.forceAPIProxyServerURL=

# The period remote API servers are blacklisted when not functioning (in seconds).
# The API proxy blacklisting mechanism is in addition to the peers blacklisting
# - if a peer is blacklisted, it won't be used by the proxy, but it is possible
# that a peer is online and correctly functioning, and only its open API is
# blocked (e.g. by firewall).
# $type=integer $min=0
nxt.apiProxyBlacklistingPeriod=7200

# When the API server is running behind a proxy, use this header to obtain the
# remote host for which the API request was forwarded. Currently only used for
# keeping track of and blacklisting hosts that try to brute force the API admin
# password.
#nxt.forwardedForHeader=X-Forwarded-For
nxt.forwardedForHeader=

# Fixes the Content-Type header of the API responses to be application/json
# instead of text/plain. Default is text/plain for compatibility reasons.
# $type=boolean
nxt.apiFixResponseContentType=false

# Allows custom setup to be performed on the API handlers before the server
# is started. An implementation of nxt.http.CustomAPISetup
nxt.apiCustomSetupImpl=

#### DEBUGGING ####

# Include caller traceback in log messages.
# $type=boolean
nxt.enableLogTraceback=false

# Enable logging of exception stack traces.
# $type=boolean
nxt.enableStackTraces=true

# Allows disabling the stack trace for certain exception classes and
# message prefixes
# This is a JSON object in which the keys are names of classes for
# which stack trace is disabled and the values are arrays of strings
# witch prefixes to be matched before disabling. Empty array disables
# all stack traces of the specified class
# $type=string $isList=true
nxt.disabledThrowableStackTraces={"nxt.NxtException$NotCurrentlyValidException": \
  [ "Invalid bid order", "Block ID at ecBlockHeight" ]}

# Enable logging the thread name.
# $type=boolean
nxt.enableLogThreadName=true

# Track balances of the following accounts and related events for debugging
# purposes.
# $type=account $isList=true
nxt.debugTraceAccounts=

# File name for logging tracked account balances.
nxt.debugTraceLog=nxt-trace.csv

# Separator character for trace log.
nxt.debugTraceSeparator=\t

# Quote character for trace log.
nxt.debugTraceQuote="

# Log changes to unconfirmed balances.
# $type=boolean
nxt.debugLogUnconfirmed=false

# Peer communication logging bit flags (1=log message names, 2=log message details)
# $type=integer $min=0 $max=3
nxt.communicationLogging=0



#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible
# customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The nxt_db folder is expected to be in the current working directory, will be
# created if missing.
# nxt.dbUrl=jdbc:h2:./nxt_db/nxt;DB_CLOSE_ON_EXIT=FALSE

# Database connection JDBC url to use with the test network, if isTestnet=true.
# nxt.testDbUrl=jdbc:h2:./nxt_test_db/nxt;DB_CLOSE_ON_EXIT=FALSE

nxt.dbType=h2
nxt.testDbType=h2

nxt.dbDir=./nxt_db/nxt
nxt.testDbDir=./nxt_test_db/nxt

nxt.dbParams=DB_CLOSE_ON_EXIT=FALSE
nxt.testDbParams=DB_CLOSE_ON_EXIT=FALSE

nxt.dbUsername=sa
nxt.testDbUsername=sa

nxt.dbPassword=sa
nxt.testDbPassword=sa

# Database connection timeout in seconds.
# $type=integer $min=0
nxt.dbLoginTimeout=70

# Database default lock timeout in seconds.
# $type=integer $min=0
nxt.dbDefaultLockTimeout=60

# Database max memory rows limit.
# $type=integer $min=0
nxt.dbMaxMemoryRows=1000000

# Connection pool implementation. Defaults to the JdbcConnectionPool in H2
nxt.connectionPoolImpl=nxt.db.pool.H2ConnectionPool

# Maximum simultaneous database connections.
# $type=integer $min=0
nxt.maxDbConnections=30

# The memory allocated to database cache, in kB.
# If set to 0, the cache size varies from a minimum of 16MB for heap sizes 160MB
# or less, to a maximum of 256MB for heap sizes 640MB or higher.
# $type=integer $min=0
nxt.dbCacheKB=0

# Enable trimming of derived objects tables. Disabling this will significantly
# worsen performance.
# $type=boolean
nxt.trimDerivedTables=true

# If trimming is enabled, maintain enough previous height records to allow
# rollback of at least that many blocks. Cannot be set to less than 720.
# After increasing this value, a full re-scan also needs to be done in order for
# the previously trimmed records to be re-created and preserved.
# $type=integer $min=720
nxt.maxRollback=800

# When trimming is enabled, it is run every nxt.trimFrequency blocks.
# $type=integer $min=1
nxt.trimFrequency=1000

# Per-table multiplier of the trim frequency. Trimming more rarely is useful for
# tables that have many records but don't change often.
# This is a list of dash-separated pairs [schema.]table_name-frequency.
# $type=string $isList=true
nxt.trimFrequencyMultipliers=PUBLIC_KEY-5;ALIAS-5

# Override the lifetime of prunable data to keep them longer, value in seconds.
# Set to -1 to disable pruning. Has no effect if set to less than the minimum
# required lifetime of two weeks (1209600 seconds) on mainnet, or 24 hours
# (86400 seconds) on testnet. Default is 90 days.
# $type=integer $min=-1
nxt.maxPrunableLifetime=7776000

# Include expired prunable parts if requested as long as it is still available.
# In order to provide the PRUNABLE peer service, nxt.maxPrunableLifetime must
# be -1 and nxt.includeExpiredPrunable must be true.  The PRUNABLE service means
# the peer will provide expired prunable data to other peers when requested.
# $type=boolean
nxt.includeExpiredPrunable=true

# Threshold for logging database statements (milliseconds).
# $type=integer $min=0
nxt.statementLogThreshold=10000

# Threshold for logging database transactions (milliseconds).
# $type=integer $min=0
nxt.transactionLogThreshold=15000

# Log the average transaction time after this many minutes.
# $type=integer $min=0
nxt.transactionLogInterval=15

# Public keys are by default cached, which consumes 10-15 MB of memory.
# $type=boolean
nxt.enablePublicKeyCache=true

# When trimming or pruning derived tables, do a commit after that many records
# are processed. Default if not set is Integer.MAX_VALUE which prevents such
# intermediate commits.
# $type=integer $min=0
nxt.batchCommitSize=100



#### Blocks and transactions ####

# Delay generation of next block in order to accumulate more transactions in it.
# Cannot be more than 14 s, as transactions are allowed at most 15 s timestamp
# difference from the block they can be included in.
# $type=integer $min=0 $max=14
nxt.forgingDelay=10

# Generate and submit the next block before its hit time in response to
# receiving a lower difficulty block. Submitting the block more than 15 s before
# its time however will lead to its rejection.
# $type=integer $min=0
nxt.forgingSpeedup=3

# Maximum number of forging accounts allowed on this node.
# $type=integer $min=0
nxt.maxNumberOfForgers=100

# Pause forging if there are no connected peers. The purpose is to not build
# a fork in case of no connection.
# $type=boolean
nxt.pauseForgingOnNoConnection=true

# Verify batches of blocks downloaded from a single peer with that many other
# peers.
# $type=integer $min=0
nxt.numberOfForkConfirmations=5
nxt.testnetNumberOfForkConfirmations=2

# Enable re-broadcasting of new transactions until they are received back from
# at least one peer, or found in the blockchain. This feature can optionally be
# disabled, to avoid the risk of revealing that this node is the submitter of
# such re-broadcasted new transactions.
# $type=boolean
nxt.enableTransactionRebroadcasting=true

# Do not allow the number of unconfirmed transactions in memory to exceed this
# value. If exceeded, the same transaction ordering as when choosing which
# transactions to include in a forged block is used to decide which to keep in
# the unconfirmed pool.
# Automatically capped to the MAX_LIST_SIZE constant (2500). Set to 0 or negative
# for max possible value.
# $type=integer
nxt.maxUnconfirmedTransactions=1500

# Maximum number of account monitors allowed on this node
# $type=integer $min=0
nxt.maxNumberOfMonitors=100

# Default deadline for ChildBlockFxtTransactions created by bundlers running
# on this node, in minutes. Max allowed is 15 minutes.
# $type=integer $min=1 $max=15
nxt.defaultChildBlockDeadline=10

# When running Bundlers, only bundle transactions that satisfy this filter.
# Filter class must implement the nxt.blockchain.Bundler.Filter interface, see
# nxt.addons.PersonalBundler for an example.
# Deprecated. Use nxt.availableBundlingFilters and provide the name of the
# filter when starting the bundler. If this property is set, the filter
# will be enforced to all bundling rules
#nxt.bundlingFilter=nxt.addons.PersonalBundler

# Filters that can be used in bundling rules when starting a bundler.
# Filter class must implement the nxt.blockchain.Bundler.Filter interface
# $type=string $isList=true
nxt.availableBundlingFilters=nxt.addons.PersonalBundler;nxt.addons.AccountPropertyBundler; \
  nxt.addons.AssetBundler;nxt.addons.CurrencyBundler;nxt.addons.PurchaseBundler; \
  nxt.addons.QuotaBundler; nxt.addons.TransactionTypeBundler

# Custom bundling fee calculators. Allows customization of fee calculation.
# Classes must implement nxt.blockchain.Bundler.FeeCalculator
# $type=string $isList=true
nxt.customBundlingFeeCalculators=



#### DESKTOP WALLET ####

# Set to "desktop" to work in desktop mode, in desktop mode, the wallet opens 
# automatically while settings, log files, and blockchain data files are 
# stored in the user folders instead of in the installation folder
nxt.runtime.mode=

# When using desktop mode and when user interface is available. Launch the
# wallet inside a desktop frame when the node is started.
# $type=boolean
nxt.launchDesktopApplication=true

# The default account is used, to automatically login to the wallet during
# startup.
# $type=account
nxt.defaultDesktopAccount=

# Support integration of ledger wallet device from the desktop wallet and
# server side APIs.
# $type=boolean
nxt.enableLedgerWallet=true

#### ACCOUNT LEDGER ####

# Address of accounts (in RS format) to track balance changes in the ledger
# table, separated by ';'.
# Set to * to track changes for all accounts. Specify no accounts to disable
# the account ledger.
# $type=account $isList=true
nxt.ledgerAccounts=*

# Specify 0 to not log unconfirmed changes, 1 to log unconfirmed changes or 2 to
# log only unconfirmed changes.
# $type=integer $min=0 $max=2
nxt.ledgerLogUnconfirmed=2

# Specify the number of blocks to keep when trimming the account ledger table.
# A value of zero will cause all blocks to be kept.
# $type=integer $min=0
nxt.ledgerTrimKeep=30000



#### VOTING SYSTEM ####

# If disabled, polls are not processed at finish height and results are not
# stored in the database. When requested, poll results will be calculated
# on-the-fly, if the votes are still available.
# $type=boolean
nxt.processPolls=true

# Delete votes for finished polls when trimming the votes table.
# $type=boolean
nxt.deleteProcessedVotes=true



#### MINT ####

# Address of the server to which the mint worker submits its transactions
# (default: localhost).
nxt.mint.serverAddress=

# Use Https when connecting to the server. Note that mint worker accepts any SSL
# certificate as valid, without checking hostname or certificate authority,
# therefore this will not protect you against a man-in-the-middle attack when
# submitting mint transactions.
# $type=boolean
nxt.mint.useHttps=false

# Specify a mintable currency code.
nxt.mint.currencyCode=

# Secret phrase for the minting account, this secret phrase is sent to the host
# specified by nxt.mint.serverAddress therefore do not specify secret phrase of
# an account with lots of funds.
# $type=password
nxt.mint.secretPhrase=

# Number of units to mint per transaction. Could be a decimal number. Use a
# dot as the fraction separator.
# The minting difficulty grows linearly with the number of units per mint.
nxt.mint.unitsPerMint=1

# The initial nonce used for minting.
# Set to 0 to start with a random nonce.
# $type=integer $min=0
nxt.mint.initialNonce=0

# Number of concurrency threads used for minting.
# Set to 0 allocate one thread per processor core.
# $type=integer $min=0
nxt.mint.threadPoolSize=0

# When set to false mint transactions are not submitted when a hash is solved.
# Set this value to true to perform actual minting.
# $type=boolean
nxt.mint.isSubmitted=false

# When set to false the mint worker will resume operation even in case a mint
# transaction has returned an error response.
# $type=boolean
nxt.mint.stopOnError=false

# ChildChain on which mint transactions are submitted.
nxt.mint.chain=IGNIS

# Transaction fee for mint transaction, in NQT.
# $type=integer $min=0
nxt.mint.feeNQT=100000000



#### CONTRACT MANAGER ####

# Name of the contract manager configuration file.
# Use this configuration file to configure contract specific setup.
# File loading is attempted from classpath then from user folder then
# installation folder.
contract.manager.uploadParamsFile=contract.uploader.json

# Address of the server to which the contract manager submits its transactions
# (default: localhost).
contract.manager.serverAddress=localhost

# Use Https when connecting to the server. Note that contract.manager accepts any SSL
# certificate as valid, without checking hostname or certificate authority,
# therefore this will not protect you against a man-in-the-middle attack when
# uploading contracts to a remote node.
# $type=boolean
contract.manager.useHttps=false

# Secret phrase for the contract.manager account, this secret phrase is not sent to the host
# specified by contract.manager.serverAddress.
# $type=password
contract.manager.secretPhrase=

# Fee calculation is based on the following factors
# If feeNQT is specified it is used as the child chain fee.
# Else if feeRateNQTPerFXT is specified, we calculates the fee by multiplying the
# feeRateNQTPerFXT by the minimum parent chain fee required.
# Else we query the existing bundlers which are still willing to pay at least
# minBundlerBalanceFXT to find the best feeRateNQTPerFXT rate. This is also the 
# default behavior in case no setting is specified.
# $type=integer $min=0
contract.manager.feeNQT=
contract.manager.feeRateNQTPerFXT=
contract.manager.minBundlerBalanceFXT=



#### Passphrase Recovery Utility ####

# Specify the approximate passphrase that you remember
# recoveryWildcard=hope peac* happen *ouch easy pretend worthless talk them indeed wheel state

# Specify the positions inside the passphrase in which you like to try various options
# The first character position is 1
# recoveryPositions=10,19

# Specify the possible values to use for replacing the unknown positions, unicode characters
# can be specified using the \u notation
# recoveryDictionary=t\u2019ne



#### Shuffling ####

# Delete finished shufflings and their participants. When enabled, records of
# completed shufflings and their participants are deleted after the shuffling
# has finished, which will improve performance by keeping their tables smaller.
# $type=boolean
nxt.deleteFinishedShufflings=false

# Use strong secure random implementation. As this can block on unix systems,
# it is disabled by default. Enable only if using haveged or other entropy
# source that makes reading from /dev/random fast, otherwise server-side
# encryption will be unusably slow and cause coin shufflings to fail.
# $type=boolean
nxt.useStrongSecureRandom=false

# Maximum number of shufflers allowed to run at the same time on this node.
# $type=integer $min=0
nxt.maxNumberOfShufflers=100



#### JETTY ####

# keystore file, required if uiSSL or apiSSL are enabled.
nxt.keyStorePath=keystore

# keystore password, required if uiSSL or apiSSL are enabled.
# $type=password
nxt.keyStorePassword=password

# keystore type defaults to JKS can be changed to PKCS12.
nxt.keyStoreType=JKS

# Domain names of the generated SSL key store. The first entry is used as
# Common Name of the certificate, the rest are added to the Alternative Name
# certificate extension. IPs must be prefixed with "ip:".
# If this property is set to empty list, localhost and 127.0.0.1 are used.
# Do not remove localhost from the list unless you explicitly want to
# disable the access to localhost
# $type=string $isList=true
nxt.generatedKeyStoreDomains=localhost;ip:127.0.0.1


#### Processes ####

# Directory path where encrypted processes configuration files are stored.
nxt.addons.EncryptedConfig.path=conf/processes/



#### Developers only ####

# Force re-validation of blocks and transaction at start.
# $type=boolean
nxt.forceValidate=false

# Force re-build of derived objects tables at start.
# $type=boolean
nxt.forceScan=false

# Scale epoch time for faster forging. Only works when offline.
# nxt.timeMultiplier=1

# Enable the following AddOns, which must also be on the classpath, e.g. placed
# in the addons/classes or addons/lib directory. List of class names, separated
# by semicolon.
#nxt.addOns=nxt.addons.Demo; nxt.addons.AfterStart; nxt.addons.BeforeShutdown
# $type=string $isList=true
nxt.addOns=

# Demo after start and before shutdown scripts
#nxt.afterStartScript=../bin/afterStart.sh
#nxt.beforeShutdownScript=../bin/beforeShutdown.sh

# The node normally sets a customized security policy when AddOns are used.
# Set to true to use the default security manager when AddOns are used.
# $type=boolean
nxt.disableSecurityPolicy=false

# Display a custom warning text on the login screen in the client UI.
nxt.customLoginWarning=

# Full text search is a functionality used in several modules. It should be
# disabled only because the underlying Apache Lucene library is not ported for
# Android. Disabling the full text search will cause several features to not
# work properly.
# $type=boolean
nxt.disableFullTextSearch=false

# Disables the metadata detection on platforms where Apache Tika is not ported.
# Currently true on Android.
# $type=boolean
nxt.disableMetadataDetection=false

# Do not compact the database on shutdown. Should only disable compact when
# faster restarts during testing are needed.
# $type=boolean
nxt.disableCompactOnShutdown=false

# Stop downloading the blockchain and disconnect networking after reaching
# this height.
#nxt.stopDownloadHeight=0

# Product version.
# $type=readonly
nxt.version=2.4.2

